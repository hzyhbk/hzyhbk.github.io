{"meta":{"title":"hzyhbk","subtitle":null,"description":null,"author":null,"url":"http://hzyhbk.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-12-28T09:13:16.961Z","updated":"2019-12-28T09:13:16.961Z","comments":true,"path":"404.html","permalink":"http://hzyhbk.github.io/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"categories","date":"2019-12-28T07:14:03.000Z","updated":"2019-12-28T07:14:22.313Z","comments":true,"path":"categories/index.html","permalink":"http://hzyhbk.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于我","date":"2019-12-28T10:22:07.200Z","updated":"2019-12-28T10:22:07.200Z","comments":true,"path":"about/index.html","permalink":"http://hzyhbk.github.io/about/index.html","excerpt":"","text":"介绍自己 我叫慌张 杭州电子科技大学-软件工程专业-2019级毕业生 杭州大搜车-无线开发部-前端开发工程师 关于主题本站主题是：Material XMac用户可以下载客户端哦： MaterialX-Installer.dmg"},{"title":"tags","date":"2019-12-28T07:14:53.000Z","updated":"2019-12-28T10:21:28.782Z","comments":true,"path":"archives/index.html","permalink":"http://hzyhbk.github.io/archives/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-12-28T07:14:53.000Z","updated":"2019-12-28T07:15:02.644Z","comments":true,"path":"tags/index.html","permalink":"http://hzyhbk.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2020年元旦快乐","slug":"start/happy-2020","date":"2020-01-01T04:52:12.000Z","updated":"2020-01-01T05:13:19.608Z","comments":true,"path":"start/happy-2020/","link":"","permalink":"http://hzyhbk.github.io/start/happy-2020/","excerpt":"2020年元旦快乐！ 2020年第一天，给博客换了个logo，顺便分享一件早上发生的糗事。","text":"2020年元旦快乐！ 2020年第一天，给博客换了个logo，顺便分享一件早上发生的糗事。 早上起床，看外面有太阳，于是就想拿被子去顶楼晒一晒。我住11楼，顶楼在14楼。起床，扛上被子，进电梯，按14楼没反应，猛地反应过来电梯从今天起启用梯控卡。可是我没带，只好尴尬的随电梯到了一楼。在一楼扛着被子等了一会，没等到人上楼，迫不得已，自己扛着被子爬上了11楼…","categories":[{"name":"生活","slug":"生活","permalink":"http://hzyhbk.github.io/categories/生活/"}],"tags":[]},{"title":"echarts-for-react 修改点击图例事件","slug":"start/echarts-for-react修改点击图例事件","date":"2019-12-28T09:37:48.000Z","updated":"2019-12-28T10:05:55.128Z","comments":true,"path":"start/echarts-for-react修改点击图例事件/","link":"","permalink":"http://hzyhbk.github.io/start/echarts-for-react修改点击图例事件/","excerpt":"需求：点击图例，则选中该项，将其他项置灰；再次点击，恢复选中所有选项 做法：监听下legendselectchanged事件，用一个变量来保存上次点击的图例的名字， 如果点击的图例名称和保存的一致，说明是再次点击，应该恢复所有选项，把所有图例都置为 true; 如果点击的图例名称和保存的不一致，说明点击了另外的图例，这是需要更新变量，并且把这次点击的图例的selected设置为true，其他的设置为false。 坑点：如果在legendselectchanged里调用 echarts 的 dispatchActions，会陷入循环调用，如果还是想调用 dispatchActions方法，可参考这篇文章。我就直接调用setOption了。 监听 legendselectchanged 事件代码如下：","text":"需求：点击图例，则选中该项，将其他项置灰；再次点击，恢复选中所有选项 做法：监听下legendselectchanged事件，用一个变量来保存上次点击的图例的名字， 如果点击的图例名称和保存的一致，说明是再次点击，应该恢复所有选项，把所有图例都置为 true; 如果点击的图例名称和保存的不一致，说明点击了另外的图例，这是需要更新变量，并且把这次点击的图例的selected设置为true，其他的设置为false。 坑点：如果在legendselectchanged里调用 echarts 的 dispatchActions，会陷入循环调用，如果还是想调用 dispatchActions方法，可参考这篇文章。我就直接调用setOption了。 监听 legendselectchanged 事件代码如下：12345678910111213141516171819202122232425262728293031onLegendSelectChanged = (e: &#123; name: string; selected: &#123; [k: string]: boolean &#125;; &#125;) =&gt; &#123; let selected = Object.assign(&#123;&#125;, e.selected); // 用一个变量来保存上次点击的图例的名字 // 如果新点击的图例名称和保存的一致，说明是再次点击，应该恢复所有选项， // 就是把所有图例都置为true if (this.clickedLegendName === e.name) &#123; this.clickedLegendName = ''; Object.keys(selected).forEach(key =&gt; &#123; selected[key] = true; &#125;); &#125; else &#123; // 如果和保存的名称不一致，说明点击了另外的图例 // 更新clickedLegendName // 把这次点击的图例的selected设置为true，其他的设置为false this.clickedLegendName = e.name; Object.keys(selected).forEach(key =&gt; &#123; if (key === e.name) &#123; selected[key] = true; &#125; else &#123; selected[key] = false; &#125; &#125;); &#125; // 重新调用 getEchartsOption const option = this.getEchartsOption(selected); // 重新调用 setOption this.echartRef.setOption(option); &#125;; 组件完整代码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123import React, &#123; PureComponent &#125; from 'react';import _ from 'lodash';import styled from 'styled-components';import ReactEcharts from 'echarts-for-react';import moment from 'moment';const Root = styled.div``;type ILineChartProps = &#123; className?: string; style?: React.CSSProperties; rawData: &#123; data: IRawChartDataItem[]; series: &#123; name: string; data: number[]; type: 'line'; areaStyle: &#123;&#125;; &#125;[]; &#125;; loading: boolean;&#125;;type ILineChartState = &#123;&#125;;class LineChart extends PureComponent&lt;ILineChartProps, ILineChartState&gt; &#123; echartRef: any = null; clickedLegendName: string; getEchartsOption = (selected: &#123; [k: string]: boolean &#125; = &#123;&#125;) =&gt; &#123; const &#123; rawData: &#123; data, series &#125;, &#125; = this.props; const option = &#123; grid: &#123; top: 24, bottom: 8, left: 24, right: 36, containLabel: true, &#125;, legend: &#123; data: series.map(item =&gt; item.name), selected &#125;, tooltip: &#123; trigger: 'axis', formatter(params: any) &#123; let text = ''; if (_.isArray(params)) &#123; text = `$&#123;moment(Number(params[0].axisValue)).format( 'YYYY-MM-DD HH:mm:ss', )&#125;&lt;br/&gt;`; _.forEach(params, obj =&gt; &#123; let value = obj.value; text = `$&#123;text&#125;$&#123;obj.marker&#125;$&#123;obj.seriesName&#125;: $&#123;value&#125;&lt;br/&gt;`; &#125;); &#125; else &#123; text = `$&#123;moment(Number(params.axisValue)).format( 'YYYY-MM-DD HH:mm:ss', )&#125;&lt;br/&gt;`; text = `$&#123;text&#125;$&#123;params&#125;$&#123;params.seriesName&#125;: $&#123;params.value&#125;`; &#125; return text; &#125;, &#125;, xAxis: &#123; data: data.map(o =&gt; o.timestamp), axisLabel: &#123; formatter(value: string) &#123; return moment(Number(value)).format('HH:mm'); &#125;, &#125;, &#125;, yAxis: &#123; type: 'value', &#125;, series: series, &#125;; return option; &#125;; onLegendSelectChanged = (e: &#123; name: string; selected: &#123; [k: string]: boolean &#125;; &#125;) =&gt; &#123; let selected = Object.assign(&#123;&#125;, e.selected); if (this.clickedLegendName === e.name) &#123; this.clickedLegendName = ''; Object.keys(selected).forEach(key =&gt; &#123; selected[key] = true; &#125;); &#125; else &#123; this.clickedLegendName = e.name; Object.keys(selected).forEach(key =&gt; &#123; if (key === e.name) &#123; selected[key] = true; &#125; else &#123; selected[key] = false; &#125; &#125;); &#125; const option = this.getEchartsOption(selected); this.echartRef.setOption(option); &#125;; render() &#123; const &#123; className, style, loading &#125; = this.props; return ( &lt;Root className=&#123;className&#125; style=&#123;style&#125; &gt; &lt;ReactEcharts ref=&#123;(ref:any) =&gt; (this.echartRef = ref &amp;&amp; ref.getEchartsInstance())&#125; option=&#123;this.getEchartsOption()&#125; showLoading=&#123;loading&#125; onEvents=&#123;&#123; legendselectchanged: this.onLegendSelectChanged, &#125;&#125; /&gt; &lt;/Root&gt; ); &#125;&#125;","categories":[{"name":"web前端","slug":"web前端","permalink":"http://hzyhbk.github.io/categories/web前端/"}],"tags":[{"name":"echarts-for-react","slug":"echarts-for-react","permalink":"http://hzyhbk.github.io/tags/echarts-for-react/"}]},{"title":"Hello World","slug":"start/hello-world","date":"2018-12-29T16:00:00.000Z","updated":"2019-12-28T10:19:14.014Z","comments":true,"path":"start/hello-world/","link":"","permalink":"http://hzyhbk.github.io/start/hello-world/","excerpt":"Hello World 中文意思是『你好,世界』。因为《The C Programming Language》中使用它做为第一个演示程序，非常著名，所以后来的程序员在学习编程或进行设备调试时延续了这一习惯。 ——百度百科 我自己开始学写代码的时候，写的第一段代码也是Hello World, 所以我把它作为博客的第一篇文章。 控制台版本1console.log('Hello World')","text":"Hello World 中文意思是『你好,世界』。因为《The C Programming Language》中使用它做为第一个演示程序，非常著名，所以后来的程序员在学习编程或进行设备调试时延续了这一习惯。 ——百度百科 我自己开始学写代码的时候，写的第一段代码也是Hello World, 所以我把它作为博客的第一篇文章。 控制台版本1console.log('Hello World') React函数式组件版本123function() &#123; return &lt;div&gt;Hello World&lt;/div&gt;&#125; React类组件版本12345class Demo &#123; render() &#123; return &lt;div&gt;Hello World&lt;/div&gt; &#125;&#125;","categories":[{"name":"web前端","slug":"web前端","permalink":"http://hzyhbk.github.io/categories/web前端/"}],"tags":[{"name":"hello-world","slug":"hello-world","permalink":"http://hzyhbk.github.io/tags/hello-world/"}]}]}